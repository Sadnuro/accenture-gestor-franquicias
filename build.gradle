plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.accenture'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Importa jakarta.validation y spring-boot-starter-validation para validaciones de inetegridad de requests
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.3'
	// https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation 'com.mysql:mysql-connector-j:9.2.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
